<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
           http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
           http://www.springframework.org/schema/tx  
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-autowire="byName" default-lazy-init="false">

	<!-- 采用注释的方式配置bean -->
	<context:annotation-config />
	<!-- 配置要扫描的包 -->
	<context:component-scan base-package="swtech" />
	<!-- 配置spring注入bean -->
	<bean class="swtech.facade.pageDesign.util.File.SpringTool" />
	<!-- 读入配置属性文件 -->
	<!-- 曾智宏注释 -->
	<!-- <context:property-placeholder location="classpath:public_system.properties,classpath:db.properties" 
		/> -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="fileEncoding" value="UTF-8" />
		<property name="locations">
			<list>
				<value>file:/root/java/ConfigFile/db.properties</value>
				<value>file:/root/java/ConfigFile/public_system.properties</value>
			</list>
		</property>
	</bean>

	<!-- <context:property-placeholder location=“file:/root/java/db.properties” 
		order=“1” ignore-resource-not-found=“true” ignore-unresolvable=“true” /> 
		<context:property-placeholder location=“classpath*:/db.properties” order=“2” 
		ignore-resource-not-found=“true” ignore-unresolvable=“true” /> -->

	<!-- proxy-target-class默认"false",更改为"ture"使用CGLib动态代理 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<import resource="classpath:spring/spring-dubbo-consumer.xml" />
	<import resource="classpath:spring/spring-dubbo-provider.xml" />
	<import resource="classpath:spring/spring-mybatis.xml" />
</beans>